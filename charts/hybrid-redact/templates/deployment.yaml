apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "akto.fullname" . }}-mini-runtime
  {{ if .Values.keel.keel.enabled }}
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 60m"
    keel.sh/monitorContainers: "akto-api"
  {{ end }}
  labels:
  {{- include "akto.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.mini_runtime.replicas }}
  selector:
    matchLabels:
      app: {{ include "akto.fullname" . }}-mini-runtime
    {{- include "akto.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "akto.fullname" . }}-mini-runtime
      {{- include "akto.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        {{ if .Values.mini_runtime.aktoApiSecurityRuntime.enabled }}
      - env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AKTO_ACCOUNT_NAME
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.aktoAccountName }}
        - name: IS_KUBERNETES
          value: "true"
        - name: RUNTIME_MODE
          value: "hybrid"
        - name: AKTO_CONFIG_NAME
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.aktoConfigName }}
        - name: AKTO_INSTANCE_TYPE
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.aktoInstanceType }}
        - name: AKTO_KAFKA_BROKER_MAL
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.aktoKafkaBrokerMal
            }}
        - name: AKTO_KAFKA_BROKER_URL
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.aktoKafkaBrokerUrl
            }}
        - name: AKTO_KAFKA_GROUP_ID_CONFIG
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.aktoKafkaGroupIdConfig
            }}
        - name: AKTO_KAFKA_MAX_POLL_RECORDS_CONFIG
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.aktoKafkaMaxPollRecordsConfig
            }}
        - name: AKTO_KAFKA_TOPIC_NAME
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.aktoKafkaTopicName
            }}
        - name: AKTO_TRAFFIC_BATCH_SIZE
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.aktoTrafficBatchSize
            }}
        - name: AKTO_TRAFFIC_BATCH_TIME_SECS
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.aktoTrafficBatchTimeSecs
            }}
        - name: PUPPETEER_REPLAY_SERVICE_URL
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.puppeteerReplayServiceUrl
            }}
        - name: USE_HOSTNAME
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.useHostName}}
        - name: BLOCK_LOGS
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.blockLogs}}
        - name: DATABASE_ABSTRACTOR_SERVICE_URL
          value: {{ quote .Values.mini_runtime.aktoApiSecurityRuntime.env.databaseAbstractorUrl}}
        - name: DATABASE_ABSTRACTOR_SERVICE_TOKEN
          value: {{ quote .Values.tokens.env.databaseAbstractorToken}}
        - name: TESTING_DB_LAYER_SERVICE_URL
          value: {{ quote .Values.tokens.env.testingDbLayerUrl}}
        - name: PUBLIC_KEY
          value: {{ quote .Values.tokens.env.publicKey}}
        - name: PROXY_URI
          value: {{ quote .Values.tokens.env.proxyUri}}
        - name: NO_PROXY
          value: {{ quote .Values.tokens.env.noProxy}}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.mini_runtime.aktoApiSecurityRuntime.image.repository }}:{{ .Values.mini_runtime.aktoApiSecurityRuntime.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.mini_runtime.aktoApiSecurityRuntime.imagePullPolicy }}
        name: akto-api-security-runtime
        resources: {{- toYaml .Values.mini_runtime.aktoApiSecurityRuntime.resources |  nindent 10 }}
      {{ end }}
      - env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: {{ quote .Values.mini_runtime.zoo1.env.zookeeperClientPort }}
        - name: ZOOKEEPER_SERVERS
          value: {{ quote .Values.mini_runtime.zoo1.env.zookeeperServers }}
        - name: ZOOKEEPER_SERVER_ID
          value: {{ quote .Values.mini_runtime.zoo1.env.zookeeperServerId }}
        - name: KAFKA_OPTS
          value: {{ quote .Values.mini_runtime.zoo1.env.kafkaOpts }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.mini_runtime.zoo1.image.repository }}:{{ .Values.mini_runtime.zoo1.image.tag
          | default .Chart.AppVersion }}
        name: zoo1
        ports:
        - containerPort: 2181
        resources: {{- toYaml .Values.mini_runtime.zoo1.resources | nindent 10 }}
      - env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "LISTENER_DOCKER_EXTERNAL_LOCALHOST://localhost:29092, LISTENER_DOCKER_EXTERNAL_DIFFHOST://{{.Release.Name}}-mini-runtime.{{.Release.Namespace}}.svc.cluster.local:9092"
        - name: KAFKA_BROKER_ID
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaBrokerId }}
        - name: KAFKA_CLEANUP_POLICY
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaCleanupPolicy }}
        - name: KAFKA_CREATE_TOPICS
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaCreateTopics }}
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaInterBrokerListenerName }}
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaListenerSecurityProtocolMap }}
        - name: KAFKA_LOG_CLEANER_ENABLE
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaLogCleanerEnable }}
        - name: KAFKA_LOG_RETENTION_BYTES
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaLogRetentionBytes }}
        - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaLogRetentionCheckIntervalMs }}
        - name: KAFKA_LOG_RETENTION_HOURS
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaLogRetentionHours }}
        - name: KAFKA_LOG_SEGMENT_BYTES
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaLogSegmentBytes }}
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaOffsetsTopicReplicationFactor
            }}
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaTransactionStateLogMinIsr }}
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaTransactionStateLogReplicationFactor
            }}
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: {{ quote .Values.mini_runtime.kafka1.env.kafkaZookeeperConnect }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.mini_runtime.kafka1.image.repository }}:{{ .Values.mini_runtime.kafka1.image.tag
          | default .Chart.AppVersion }}
        name: kafka1
        ports:
        - containerPort: 9092
        - containerPort: 19092
        - containerPort: 29092
        - containerPort: 9999
        resources: {{- toYaml .Values.mini_runtime.kafka1.resources | nindent 10 }}
      restartPolicy: Always
---
{{ if .Values.keel.keel.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "akto.fullname" . }}-keel
  labels:
    app: keel
  {{- include "akto.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.keel.replicas }}
  selector:
    matchLabels:
      app: {{ include "akto.fullname" . }}-keel
    {{- include "akto.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "akto.fullname" . }}-keel
      {{- include "akto.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - command:
        - /bin/keel
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AWS_ACCESS_KEY_ID
          value: {{ quote .Values.keel.keel.env.awsAccessKeyId }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ quote .Values.keel.keel.env.awsSecretAccessKey }}
        - name: AWS_REGION
          value: {{ quote .Values.keel.keel.env.awsRegion }}
        - name: WEBHOOK_ENDPOINT
          value: {{ quote .Values.keel.keel.env.webhookEndpoint }}
        - name: MATTERMOST_ENDPOINT
          value: {{ quote .Values.keel.keel.env.mattermostEndpoint }}
        - name: HIPCHAT_TOKEN
          value: {{ quote .Values.keel.keel.env.hipchatToken }}
        - name: HIPCHAT_CHANNELS
          value: {{ quote .Values.keel.keel.env.hipchatChannels }}
        - name: HIPCHAT_APPROVALS_CHANNEL
          value: {{ quote .Values.keel.keel.env.hipchatApprovalsChannel }}
        - name: HIPCHAT_APPROVALS_BOT_NAME
          value: {{ quote .Values.keel.keel.env.hipchatApprovalsBotName }}
        - name: HIPCHAT_APPROVALS_USER_NAME
          value: {{ quote .Values.keel.keel.env.hipchatApprovalsUserName }}
        - name: HIPCHAT_APPROVALS_PASSWORT
          value: {{ quote .Values.keel.keel.env.hipchatApprovalsPasswort }}
        - name: NOTIFICATION_LEVEL
          value: {{ quote .Values.keel.keel.env.notificationLevel }}
        - name: INSECURE_REGISTRY
          value: {{ quote .Values.keel.keel.env.insecureRegistry }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.keel.keel.image.repository }}:{{ .Values.keel.keel.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.keel.keel.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9300
          initialDelaySeconds: 30
          timeoutSeconds: 10
        name: keel
        ports:
        - containerPort: 9300
        resources: {{- toYaml .Values.keel.keel.resources | nindent 10 }}
      serviceAccountName: {{ include "akto.fullname" . }}-keel
{{ end }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "akto.fullname" . }}-testing
  {{ if .Values.keel.keel.enabled }}
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/match-tag: "true"
    keel.sh/pollSchedule: "@every 60m"
  {{ end }}
  labels:
  {{- include "akto.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.testing.replicas }}
  selector:
    matchLabels:
      app: {{ include "akto.fullname" . }}-testing
    {{- include "akto.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "akto.fullname" . }}-testing
      {{- include "akto.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AKTO_ACCOUNT_NAME
          value: {{ quote .Values.testing.aktoApiSecurityTesting.env.aktoAccountName }}
        - name: IS_KUBERNETES
          value: "true"
        - name: RUNTIME_MODE
          value: "hybrid"
        - name: AKTO_CONFIG_NAME
          value: {{ quote .Values.testing.aktoApiSecurityTesting.env.aktoConfigName }}
        - name: DATABASE_ABSTRACTOR_SERVICE_URL
          value: {{ quote .Values.testing.aktoApiSecurityTesting.env.databaseAbstractorUrl}}
        - name: DATABASE_ABSTRACTOR_SERVICE_TOKEN
          value: {{ quote .Values.tokens.env.databaseAbstractorToken}}
        - name: TESTING_DB_LAYER_SERVICE_URL
          value: {{ quote .Values.tokens.env.testingDbLayerUrl}}
        - name: PRIVATE_KEY
          value: {{ quote .Values.tokens.env.privateKey}}
        - name: PROXY_URI
          value: {{ quote .Values.tokens.env.proxyUri}}
        - name: NO_PROXY
          value: {{ quote .Values.tokens.env.noProxy}}
        - name: PUPPETEER_REPLAY_SERVICE_URL
          value: {{ quote .Values.testing.aktoApiSecurityTesting.env.puppeteerReplayServiceUrl
            }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.testing.aktoApiSecurityTesting.image.repository }}:{{ .Values.testing.aktoApiSecurityTesting.image.tag
          | default .Chart.AppVersion }}
        name: akto-api-security-testing
        resources: {{- toYaml .Values.testing.aktoApiSecurityTesting.resources |  nindent 10 }}
      - name: akto-api-security-puppeteer-replay
        image: {{ .Values.testing.aktoApiSecurityPuppeteerReplay.image.repository }}:{{ .Values.testing.aktoApiSecurityPuppeteerReplay.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.testing.aktoApiSecurityPuppeteerReplay.imagePullPolicy }}
        ports:
          - containerPort: 3000
        resources: {{- toYaml .Values.testing.aktoApiSecurityPuppeteerReplay.resources |  nindent 10 }}
      restartPolicy: Always
